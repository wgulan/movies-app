[{"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\index.js":"1","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\App.js":"2","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\state\\movies\\operations.js":"3","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\state\\store.js":"4","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\state\\movies\\actions.js":"5","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\Movies.js":"6","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\Movie.js":"7","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\Navbar.js":"8","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\state\\movies\\types.js":"9","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\state\\movies\\reducers.js":"10","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\state\\movies\\selectors.js":"11","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\SearchBar.js":"12","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\Popup.js":"13","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\Comment.js":"14","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\forms\\AddCommentForm.js":"15","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\forms\\EditCommentForm.js":"16","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\forms\\EditMovieForm.js":"17","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\forms\\AddMovieForm.js":"18"},{"size":467,"mtime":1619198713832,"results":"19","hashOfConfig":"20"},{"size":2632,"mtime":1619198692635,"results":"21","hashOfConfig":"20"},{"size":4141,"mtime":1611508701758,"results":"22","hashOfConfig":"20"},{"size":480,"mtime":1611251794130,"results":"23","hashOfConfig":"20"},{"size":974,"mtime":1611429166541,"results":"24","hashOfConfig":"20"},{"size":7770,"mtime":1619198275117,"results":"25","hashOfConfig":"20"},{"size":6643,"mtime":1619198275116,"results":"26","hashOfConfig":"20"},{"size":1411,"mtime":1619198275117,"results":"27","hashOfConfig":"20"},{"size":2479,"mtime":1611508128801,"results":"28","hashOfConfig":"20"},{"size":4599,"mtime":1611508088926,"results":"29","hashOfConfig":"20"},{"size":2975,"mtime":1611506517670,"results":"30","hashOfConfig":"20"},{"size":6085,"mtime":1619198275118,"results":"31","hashOfConfig":"20"},{"size":2694,"mtime":1611508523480,"results":"32","hashOfConfig":"20"},{"size":4092,"mtime":1619198275116,"results":"33","hashOfConfig":"20"},{"size":3849,"mtime":1611513813285,"results":"34","hashOfConfig":"20"},{"size":4209,"mtime":1611517043559,"results":"35","hashOfConfig":"20"},{"size":12030,"mtime":1611519090319,"results":"36","hashOfConfig":"20"},{"size":13806,"mtime":1611519100160,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1knwe9x",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\index.js",[],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\App.js",["79","80"],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\state\\movies\\operations.js",[],["81","82"],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\state\\store.js",[],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\state\\movies\\actions.js",[],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\Movies.js",[],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\Movie.js",["83"],"import React, { useState } from 'react'\r\nimport { Grid, makeStyles, Card, Typography, CardContent, CardMedia, IconButton, Paper } from '@material-ui/core';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport operations from '../state/movies/operations';\r\nimport actions from '../state/movies/actions';\r\nimport selectors from '../state/movies/selectors';\r\nimport Comment from './Comment';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport Popup from './Popup';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n        paddingTop: \"20px\",\r\n        paddingLeft: \"15px\",\r\n        paddingRight: \"15px\",\r\n    },\r\n    card: {\r\n        height: \"100%\",\r\n        maxWidth: \"900px\",\r\n        margin: \"auto\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            flexDirection: \"column\",\r\n            marginBottom: \"18px\",\r\n            maxWidth: 400,\r\n        },\r\n        position: \"relative\",\r\n    },\r\n    cardContent: {\r\n        height: '100%',\r\n        width: \"100%\",\r\n        padding: \"20px 60px 60px 20px\",\r\n        position: \"relative\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height: 580,\r\n            width: '350px'\r\n        },\r\n    },\r\n    cardMedia: {\r\n        height: 630,\r\n        width: \"100%\",\r\n        maxWidth: 450,\r\n        objectFit: \"cover\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height: 550,\r\n            width: \"100%\",\r\n        }\r\n    },\r\n    title: {\r\n        fontSize: 36,\r\n        fontWeight: 600,\r\n        textTransform: \"uppercase\",\r\n        marginBottom: 8,\r\n    },\r\n    tagline: {\r\n        fontSize: 18,\r\n        marginBottom: 10,\r\n        \r\n    },\r\n    movieInfoContainer: {\r\n        marginTop: \"50px\",\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n        width: \"100%\",\r\n        height: \"150px\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginBottom: \"42px\",\r\n        }\r\n    },\r\n    movieInfo: {\r\n        fontSize: '12px',\r\n        fontWeight: 'bold'\r\n    }\r\n}));\r\n\r\nconst Movie = (props) => {\r\n    const { movieData, updateSearchKey } = props;\r\n    const movieId = props.match.params.movieId;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    useEffect(() => updateSearchKey(\"\"), []);\r\n\r\n    return (\r\n        <div>\r\n            <Grid container className={classes.mainContainer}>\r\n                {movieData !== undefined ? (\r\n                    <>\r\n                        <Grid item xs={12}>\r\n                            <Card className={classes.card}>\r\n                                <CardMedia\r\n                                    className={classes.cardMedia}\r\n                                    image={movieData.poster_path ? `https://image.tmdb.org/t/p/w500${movieData.poster_path}` : \"/poster-placeholder.png\"}\r\n                                />\r\n                                <CardContent className={classes.cardContent}>\r\n                                    <Typography className={classes.title}>\r\n                                        {movieData.title}\r\n                                    </Typography>\r\n                                    <Typography variant={'body1'} className={classes.tagline}>\r\n                                        {movieData.tagline}\r\n                                    </Typography>\r\n                                    <Typography variant={\"body2\"}>\r\n                                        {movieData.overview}\r\n                                    </Typography>\r\n                                    <Grid item container xs={12} direction=\"row\" justify=\"space-between\" className={classes.movieInfoContainer}>\r\n                                        <Grid item xs={6}><Typography variant={\"overline\"} className={classes.movieInfo}>Average rating: {movieData.vote_average}</Typography></Grid>\r\n                                        <Grid item xs={6}><Typography variant={\"overline\"} className={classes.movieInfo}>Running time: {movieData.runtime} mins</Typography></Grid>\r\n                                        <Grid item xs={6}><Typography variant={\"overline\"} className={classes.movieInfo}>Release date: {movieData.release_date}</Typography></Grid>\r\n                                        <Grid item xs={6}><Typography variant={\"overline\"} className={classes.movieInfo}>Box office: ${movieData.revenue}</Typography></Grid>\r\n                                    </Grid>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                        <div style={{ width: '100%', textAlign: 'center', margin: '24px auto 20px auto' }}>\r\n                            <IconButton color=\"primary\" aria-label=\"add\" component=\"span\" onClick={() => setDialogOpen(true)}>\r\n                                <AddCommentIcon fontSize='large' />\r\n                            </IconButton>\r\n                        </div>\r\n                        <Paper style={{ margin: '10px auto 20px auto' }}>\r\n                            {movieData.comments.map(c => (\r\n                                <Comment movieId={movieId} commentId={c.id} />\r\n                            ))}\r\n                        </Paper>\r\n                        <Popup dialogOpen={dialogOpen} movieId={movieId} type={'addComment'} setDialogOpen={setDialogOpen} />\r\n                    </>\r\n                ) : (\r\n                        <Grid item xs={12} style={{ marginTop: '64px', textAlign: \"center\" }}>\r\n                            <CircularProgress thickness={4.2} size={50} style={{ 'color': \"#454545\" }} />\r\n                        </Grid>\r\n                    )}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const movieId = ownProps.match.params.movieId;\r\n    const selectMovie = selectors.makeSelectMovieWithId(movieId)\r\n    return {\r\n        movieData: selectMovie(state),\r\n        movies: state.movies.allMovies\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchMovieDetails: (movieId) => dispatch(operations.getMovieDetails(movieId)),\r\n        updateSearchKey: (query) => dispatch(actions.updateSearchKey(query))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie)\r\n","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\Navbar.js",["84","85"],"import { AppBar, IconButton, makeStyles, Tab, Tabs, Toolbar} from \"@material-ui/core\";\r\nimport TheatersIcon from \"@material-ui/icons/Theaters\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    iconButton: {\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\",\r\n        },\r\n        \"padding-right\": \"0px\",\r\n        \"padding-left\": \"0px\",\r\n    },\r\n    tab: {\r\n        \"fontSize\": \"18px\",\r\n        \"fontWeight\": \"600\",\r\n        \"padding\": \"12px 6px\"\r\n    }\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n    const classes = useStyles(props.theme);\r\n    \r\n    return (\r\n        <AppBar position=\"static\" style={{ backgroundColor: \"#111218\", height: '75px', paddingTop: '5px' }}>\r\n            <Toolbar>\r\n                <IconButton\r\n                    component={Link}\r\n                    to={\"/\"}\r\n                    className={classes.iconButton}\r\n                    disableRipple \r\n                    color=\"primary\"\r\n                >\r\n                    <TheatersIcon\r\n                        style={{\r\n                            fontSize: 42,\r\n                            marginRight: '24px'\r\n                        }}\r\n                    />\r\n                </IconButton>\r\n                <SearchBar />\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\state\\movies\\types.js",[],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\state\\movies\\reducers.js",[],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\state\\movies\\selectors.js",[],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\SearchBar.js",["86"],"import React, { useState, useEffect } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport actions from '../state/movies/actions'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { Select, FormControl, makeStyles, Typography, Slider, IconButton, InputAdornment, MenuItem } from '@material-ui/core'\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        paddingLeft: '15px',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n    },\r\n    yearRange: {\r\n        width: 150,\r\n        color: 'black',\r\n        marginBottom: '-8px',\r\n        textAlign: 'center',\r\n        padding: '0px 8px'\r\n    },\r\n    input: {\r\n        background: theme.palette.background.lighter,\r\n        padding: '8px 14px',\r\n        color: theme.palette.primary.main,\r\n        fontWeight: \"bold\"\r\n    },\r\n    sliderText: {\r\n        color: theme.palette.primary.main,\r\n        padding: '8px 1px',\r\n        fontWeight: \"bold\",\r\n        fontSize: '16px'\r\n    },\r\n    arrowIcon: {\r\n        color: theme.palette.primary.main,\r\n        padding: '8px 1px',\r\n        fontWeight: \"bold\",\r\n        fontSize: '24px'\r\n    }\r\n}));\r\n\r\n\r\nconst SearchBar = (props) => {\r\n    const classes = useStyles(props.theme);\r\n    const [years, setYears] = useState(props.yearSliderRange)\r\n\r\n    useEffect(() => props.updateSearchKey(''), [])\r\n    // update year state when sliderRange in store changes (e.g when new movie with oldest release date is added to the store)\r\n    useEffect(() => setYears(props.yearSliderRange), [props.yearSliderRange]);\r\n\r\n    const handleSearchKeyChange = (e) => props.updateSearchKey(e.target.value);\r\n\r\n    // update years filter state when slider's value is changed\r\n    const handleYearsChange = (event, newYears) => setYears(newYears);\r\n    // update years filter values in store on mouse release\r\n    const handleYearFilterValuesChange = () => props.updateYearFilterValues(years);\r\n\r\n    return (\r\n        <>\r\n            <TextField onChange={handleSearchKeyChange} value={props.searchKey} placeholder={\"Search movie title...\"} \r\n                style={{width: '230px'}}\r\n                color=\"primary\"\r\n                InputProps={{\r\n                    className: classes.input,\r\n                    startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                        </InputAdornment>\r\n                    ),\r\n                }} />\r\n            <FormControl className={classes.formControl}>\r\n                <Select\r\n                    displayEmpty\r\n                    value={props.genreFilter}\r\n                    onChange={(e) => props.updateGenreFilter(e.target.value)}\r\n                    style={{width: '140px'}}\r\n                    className={classes.input}\r\n                >\r\n                    <MenuItem value=\"\" disabled>Genre</MenuItem>\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    {props.genres.map(genre =>\r\n                        <MenuItem key={genre} value={genre}>{genre}</MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n            <div className={classes.yearRange}>\r\n                <Typography id=\"year-range\" variant=\"caption\" className={classes.sliderText}>\r\n                    Production year\r\n                </Typography>\r\n                <Slider\r\n                    value={years}\r\n                    valueLabelDisplay=\"auto\"\r\n                    min={props.yearSliderRange[0]}\r\n                    max={props.yearSliderRange[1]}\r\n                    aria-labelledby=\"year-range\"\r\n                    onChange={handleYearsChange}\r\n                    onChangeCommitted={handleYearFilterValuesChange}\r\n                    style={{ padding: '0px 5px 8px 5px' }}\r\n                />\r\n            </div>\r\n            <FormControl className={classes.formControl}>\r\n                <Select\r\n                    displayEmpty\r\n                    value={props.sortKey}\r\n                    onChange={(e) => props.updateSortKey(e.target.value)}\r\n                    className={classes.input}\r\n                >\r\n                    <MenuItem value=\"\" disabled>Sort by</MenuItem>\r\n                    <MenuItem key={'title'} value={'title'}>Title</MenuItem>\r\n                    <MenuItem key={'release'} value={'release'}>Release</MenuItem>\r\n                    <MenuItem key={'rating'} value={'rating'}>Rating</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <IconButton onClick={() => props.updateSortOrder()} >\r\n                {props.sortOrder === 'asc' ?\r\n                    (\r\n                        <ArrowUpwardIcon className={classes.arrowIcon}/>\r\n                    ) : (<ArrowDownwardIcon className={classes.arrowIcon}/>)}\r\n\r\n            </IconButton>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchKey: state.movies.searchKey,\r\n        genreFilter: state.movies.genreFilter,\r\n        genres: state.movies.genres,\r\n        movies: state.movies.allMovies,\r\n        yearFilterValues: state.movies.yearFilter.filterValues,\r\n        yearSliderRange: state.movies.yearFilter.sliderRange,\r\n        sortKey: state.movies.sortParams.key,\r\n        sortOrder: state.movies.sortParams.order,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateSearchKey: (query) => dispatch(actions.updateSearchKey(query)),\r\n        updateGenreFilter: (genre) => dispatch(actions.updateGenreFilter(genre)),\r\n        updateYearFilterValues: (filterValues) => dispatch(actions.updateYearRangeFilter(filterValues)),\r\n        updateSortKey: (key) => dispatch(actions.updateSortKey(key)),\r\n        updateSortOrder: () => dispatch(actions.updateSortOrder())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\r\n","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\Popup.js",["87"],"import React, { useState } from 'react';\r\nimport { Button } from \"@material-ui/core\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useEffect } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport selectors from '../state/movies/selectors';\r\nimport EditMovieForm from './forms/EditMovieForm';\r\nimport AddCommentForm from './forms/AddCommentForm';\r\nimport AddMovieForm from './forms/AddMovieForm';\r\nimport EditCommentForm from './forms/EditCommentForm';\r\n\r\n\r\n\r\nconst Popup = (props) => {\r\n  const [open, setOpen] = useState(props.dialogOpen);\r\n\r\n  useEffect(() => {\r\n    setOpen(props.dialogOpen)\r\n    console.log(props.type)\r\n  }, [props.dialogOpen])\r\n\r\n  const handleClose = () => {\r\n    props.setDialogOpen(false)\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth={'md'}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          {(() => {\r\n            switch (props.type) {\r\n              case 'addMovie':\r\n                return \"Add new movie\";\r\n              case 'editMovie':\r\n                return \"Edit movie\";\r\n              case 'addComment':\r\n                return \"Add new comment\";\r\n              case 'editComment':\r\n                return \"Edit comment\";\r\n              default:\r\n                return null;\r\n            }\r\n          })()}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {(() => {\r\n            switch (props.type) {\r\n              case 'addMovie':\r\n                return <AddMovieForm closePopup={handleClose} />;\r\n              case 'editMovie':\r\n                return <EditMovieForm movieId={props.movieId} closePopup={handleClose} />;\r\n              case 'addComment':\r\n                return <AddCommentForm movieId={props.movieId} closePopup={handleClose} />;\r\n              case 'editComment':\r\n                return <EditCommentForm movieId={props.movieId} commentId={props.commentId} closePopup={handleClose} />;\r\n              default:\r\n                return null;\r\n            }\r\n          })()}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const movieId = ownProps.movieId;\r\n  const selectMovie = selectors.makeSelectMovieWithId(movieId)\r\n  return {\r\n    movieData: selectMovie(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Popup);","D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\Comment.js",[],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\forms\\AddCommentForm.js",[],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\forms\\EditCommentForm.js",[],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\forms\\EditMovieForm.js",[],"D:\\Studia\\III\\Frontend\\lab\\gulan-wojciech\\projekt\\movies-app\\src\\ui\\forms\\AddMovieForm.js",[],{"ruleId":"88","severity":1,"message":"89","line":34,"column":7,"nodeType":"90","messageId":"91","endLine":34,"endColumn":12},{"ruleId":"92","severity":1,"message":"93","line":69,"column":5,"nodeType":"94","endLine":69,"endColumn":16,"suggestions":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"92","severity":1,"message":"100","line":94,"column":42,"nodeType":"94","endLine":94,"endColumn":44,"suggestions":"101"},{"ruleId":"88","severity":1,"message":"102","line":1,"column":42,"nodeType":"90","messageId":"91","endLine":1,"endColumn":45},{"ruleId":"88","severity":1,"message":"103","line":1,"column":47,"nodeType":"90","messageId":"91","endLine":1,"endColumn":51},{"ruleId":"92","severity":1,"message":"104","line":50,"column":48,"nodeType":"94","endLine":50,"endColumn":50,"suggestions":"105"},{"ruleId":"92","severity":1,"message":"106","line":23,"column":6,"nodeType":"94","endLine":23,"endColumn":24,"suggestions":"107"},"no-unused-vars","'light' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateYearRangeSlider'. Either include it or remove the dependency array.","ArrayExpression",["108"],"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"React Hook useEffect has a missing dependency: 'updateSearchKey'. Either include it or remove the dependency array.",["111"],"'Tab' is defined but never used.","'Tabs' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["112"],"React Hook useEffect has a missing dependency: 'props.type'. Either include it or remove the dependency array.",["113"],{"desc":"114","fix":"115"},"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [allMovies, updateYearRangeSlider]",{"range":"122","text":"123"},"Update the dependencies array to be: [updateSearchKey]",{"range":"124","text":"125"},"Update the dependencies array to be: [props]",{"range":"126","text":"127"},"Update the dependencies array to be: [props.dialogOpen, props.type]",{"range":"128","text":"129"},[1806,1817],"[allMovies, updateYearRangeSlider]",[2624,2626],"[updateSearchKey]",[1569,1571],"[props]",[834,852],"[props.dialogOpen, props.type]"]